{"ast":null,"code":"var __jsx = React.createElement;\nimport React from \"react\";\nimport { useFormik } from \"formik\";\nimport BlogForm from \"src/cms/blogs/BlogForm\";\nimport { useBlogUpdate } from \"src/cms/blogs/hooks\";\nimport useSWR from \"swr\";\nimport { useRouter } from \"next/router\";\n\nconst fetcher = async url => {\n  const res = await fetch(url);\n\n  if (!res.ok) {\n    throw new Error(\"Something is wrong\");\n  }\n\n  return await res.json();\n};\n\nconst DataLoader = () => {\n  const router = useRouter();\n  const {\n    id\n  } = router.query;\n  const {\n    data,\n    error\n  } = useSWR(`/api/cms/blogs/${id}`, fetcher);\n\n  if (error) {\n    return __jsx(\"div\", null, \"Something is wrong\");\n  }\n\n  if (!data) {\n    return __jsx(\"div\", null, \"Loading...\");\n  }\n\n  return __jsx(BlogFormik, {\n    blog: data\n  });\n};\n\nconst BlogFormik = ({\n  blog\n}) => {\n  const {\n    handleUpdate\n  } = useBlogUpdate();\n  const formik = useFormik({\n    initialValues: blog,\n    onSubmit: async (values, {\n      setStatus,\n      setSubmitting\n    }) => {\n      try {\n        setSubmitting(true);\n        await handleUpdate(blog.id, values);\n        setStatus({\n          success: true\n        });\n      } catch (error) {\n        setStatus({\n          error: true\n        });\n      }\n    }\n  });\n  return __jsx(BlogForm, {\n    formik: formik\n  });\n};\n\nconst BlogEdit = () => {\n  return __jsx(DataLoader, null);\n};\n\nexport default BlogEdit;","map":null,"metadata":{},"sourceType":"module"}