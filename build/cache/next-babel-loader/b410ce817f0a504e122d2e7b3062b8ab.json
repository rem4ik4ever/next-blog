{"ast":null,"code":"import axios from \"axios\";\nimport { useEffect, useState } from \"react\";\nimport _ from \"lodash\";\nexport function useBlogUpdate() {\n  const handleUpdate = async (id, payload) => {\n    const result = await axios.put(`/api/cms/blogs/${id}`, payload);\n    return result;\n  };\n\n  return {\n    handleUpdate\n  };\n}\nexport function useBlogsFilter(data, filters) {\n  // filter by title\n  // filter by status\n  const {\n    0: filteredBlogs,\n    1: setState\n  } = useState(data);\n  useEffect(() => {\n    filterBlogs();\n  }, [data, filters]);\n\n  const filterBlogs = () => {\n    let blogsByStatus = [];\n    let blogsBySearch = [];\n    const searchFilter = filters.search.trim();\n\n    if (filters.status && filters.status !== \"all\") {\n      blogsByStatus = _.filter(data, ({\n        status\n      }) => status === filters.status);\n    } else {\n      blogsByStatus = data;\n    }\n\n    if (searchFilter && String(searchFilter).length > 0) {\n      const tagsMatch = _.filter(data, ({\n        tags\n      }) => _.intersection(tags, searchFilter.toLowerCase().split(\" \")).length > 0);\n\n      const titleMatch = _.filter(data, ({\n        title\n      }) => title.toLowerCase().includes(searchFilter.toLowerCase()) || searchFilter.toLowerCase().includes(title.toLowerCase()));\n\n      if (tagsMatch.length > 0 && titleMatch.length > 0) {\n        blogsBySearch = _.intersection(tagsMatch, titleMatch);\n      } else {\n        blogsBySearch = tagsMatch.concat(titleMatch);\n      }\n    } else {\n      blogsBySearch = data;\n    }\n\n    setState(_.intersection(blogsBySearch, blogsByStatus));\n  };\n\n  return {\n    filteredBlogs\n  };\n}","map":null,"metadata":{},"sourceType":"module"}