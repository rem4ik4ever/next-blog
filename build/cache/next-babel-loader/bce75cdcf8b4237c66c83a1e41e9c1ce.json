{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport { useFormik } from \"formik\";\nimport BlogForm from \"src/cms/blogs/BlogForm\";\nimport { useBlogUpdate } from \"src/cms/blogs/hooks\";\nimport useSWR from \"swr\";\nimport { useRouter } from \"next/router\";\n\nvar fetcher = function fetcher(url) {\n  var res;\n  return _regeneratorRuntime.async(function fetcher$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return _regeneratorRuntime.awrap(fetch(url));\n\n        case 2:\n          res = _context.sent;\n\n          if (res.ok) {\n            _context.next = 5;\n            break;\n          }\n\n          throw new Error(\"Something is wrong\");\n\n        case 5:\n          _context.next = 7;\n          return _regeneratorRuntime.awrap(res.json());\n\n        case 7:\n          return _context.abrupt(\"return\", _context.sent);\n\n        case 8:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\n\nvar DataLoader = function DataLoader() {\n  var router = useRouter();\n  var id = router.query.id;\n\n  var _useSWR = useSWR(\"/api/cms/blogs/\".concat(id), fetcher),\n      data = _useSWR.data,\n      error = _useSWR.error;\n\n  if (error) {\n    return __jsx(\"div\", null, \"Something is wrong\");\n  }\n\n  if (!data) {\n    return __jsx(\"div\", null, \"Loading...\");\n  }\n\n  return __jsx(BlogFormik, {\n    blog: data\n  });\n};\n\nvar BlogFormik = function BlogFormik(_ref) {\n  var blog = _ref.blog;\n\n  var _useBlogUpdate = useBlogUpdate(),\n      handleUpdate = _useBlogUpdate.handleUpdate;\n\n  var formik = useFormik({\n    initialValues: blog,\n    onSubmit: function onSubmit(values, _ref2) {\n      var setStatus, setSubmitting;\n      return _regeneratorRuntime.async(function onSubmit$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              setStatus = _ref2.setStatus, setSubmitting = _ref2.setSubmitting;\n              _context2.prev = 1;\n              setSubmitting(true);\n              _context2.next = 5;\n              return _regeneratorRuntime.awrap(handleUpdate(blog.id, values));\n\n            case 5:\n              setStatus({\n                success: true\n              });\n              _context2.next = 11;\n              break;\n\n            case 8:\n              _context2.prev = 8;\n              _context2.t0 = _context2[\"catch\"](1);\n              setStatus({\n                error: true\n              });\n\n            case 11:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, null, [[1, 8]], Promise);\n    }\n  });\n  return __jsx(BlogForm, {\n    formik: formik\n  });\n};\n\nvar BlogEdit = function BlogEdit() {\n  return __jsx(DataLoader, null);\n};\n\nexport default BlogEdit;","map":null,"metadata":{},"sourceType":"module"}