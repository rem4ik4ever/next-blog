{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport axios from \"axios\";\nexport var uploadToS3 = function uploadToS3(file, signedRequest) {\n  var options;\n  return _regeneratorRuntime.async(function uploadToS3$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          options = {\n            headers: {\n              \"Content-Type\": file.type\n            }\n          };\n          _context.next = 3;\n          return _regeneratorRuntime.awrap(axios.put(signedRequest, file, options));\n\n        case 3:\n          return _context.abrupt(\"return\", _context.sent);\n\n        case 4:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};","map":null,"metadata":{},"sourceType":"module"}