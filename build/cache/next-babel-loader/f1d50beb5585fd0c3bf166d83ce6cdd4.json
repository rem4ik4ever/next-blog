{"ast":null,"code":"import devonlyMiddleware from \"src/middlewares/devonly.middleware\";\nimport utilities from '@rem-blog/utilities';\nconst NOT_FOUND = \"Not found\";\nconst OK = \"Ok\";\n\nconst handler = async (req, res) => {\n  const {\n    s3DeleteFile\n  } = utilities.AWS_S3;\n  const {\n    allFiles,\n    writeJSONToFile\n  } = utilities.Files;\n\n  try {\n    if (req.method !== \"DELETE\") {\n      throw new Error(\"Invalid method\");\n    }\n\n    await devonlyMiddleware(req, res);\n    const {\n      id,\n      size\n    } = req.query;\n\n    if (!id || !size) {\n      res.statusCode = 404;\n      return res.end(NOT_FOUND);\n    }\n\n    const files = allFiles();\n    const file = files.find(fl => fl.id === id);\n\n    if (!(file === null || file === void 0 ? void 0 : file.sizes) || !Object.keys(file.sizes).includes(String(size))) {\n      res.statusCode = 404;\n      return res.end(NOT_FOUND);\n    }\n\n    const sizeObject = file.sizes[String(size)];\n    await s3DeleteFile(sizeObject.key);\n    delete file.sizes[String(size)];\n    await writeJSONToFile('./data/assets', file);\n    res.statusCode = 200;\n    res.end(OK);\n  } catch (err) {\n    console.error(err);\n    res.statusCode = 404;\n    res.end(NOT_FOUND);\n  }\n};\n\nexport default handler;","map":null,"metadata":{},"sourceType":"module"}