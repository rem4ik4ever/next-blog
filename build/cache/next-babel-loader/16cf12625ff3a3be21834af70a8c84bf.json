{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nvar __jsx = React.createElement;\nimport React, { useState } from \"react\";\nimport { Box, Flex, Link, Image, Heading, Text, Tooltip, IconButton, useClipboard, Input, InputGroup, InputRightAddon, List, ListItem } from \"@chakra-ui/core\";\nimport axios from \"axios\";\nimport { getImageURL } from \"src/images/utils\";\nimport FormatUrl from \"./FormatUrl\";\n\nvar FileCard = function FileCard(_ref) {\n  var file = _ref.file;\n\n  var _useState = useState(200),\n      size = _useState[0],\n      setSize = _useState[1];\n\n  var _useClipboard = useClipboard(getImageURL(file.url, size)),\n      onCopy = _useClipboard.onCopy,\n      hasCopied = _useClipboard.hasCopied;\n\n  var onDelete = function onDelete(ev) {\n    ev.preventDefault();\n    axios[\"delete\"](\"/api/files/\".concat(file.id)).then(function (res) {\n      console.log(\"File deleted\", res);\n      location.reload();\n    })[\"catch\"](function (err) {\n      console.error(\"Error\", err);\n    });\n  };\n\n  var formatImage = function formatImage(ev) {\n    return _regeneratorRuntime.async(function formatImage$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            ev.preventDefault();\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(axios.post(\"/api/images/\".concat(file.id), {\n              source: file.url,\n              w: size\n            }));\n\n          case 3:\n            location.reload();\n\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return __jsx(Box, {\n    w: \"100\",\n    backgroundColor: \"white\",\n    borderRadius: \"8px\",\n    p: \"2\",\n    mb: \"2\"\n  }, __jsx(Flex, {\n    align: \"center\"\n  }, __jsx(Link, {\n    href: getImageURL(file.url, 220),\n    mr: \"2\"\n  }, __jsx(Image, {\n    src: getImageURL(file.url, 220),\n    alt: file.name,\n    w: \"220px\"\n  })), __jsx(Flex, {\n    direction: \"column\",\n    alignSelf: \"stretch\",\n    justifyContent: \"space-between\",\n    flex: \"1\"\n  }, __jsx(Box, null, __jsx(Heading, {\n    as: \"h2\",\n    size: \"sm\"\n  }, file.name), __jsx(Text, {\n    color: \"gray.500\"\n  }, \"Size: \", file.size), file.sizes && __jsx(List, null, Object.keys(file.sizes).map(function (size) {\n    return __jsx(ListItem, {\n      key: file.sizes[size].key\n    }, __jsx(FormatUrl, {\n      file: file,\n      size: size\n    }), \" \");\n  }))), __jsx(Flex, {\n    justifyContent: \"space-around\"\n  }, __jsx(Flex, null, __jsx(InputGroup, null, __jsx(Input, {\n    type: \"number\",\n    name: \"size\",\n    maxW: \"100px\",\n    textAlign: \"right\",\n    value: size,\n    onChange: function onChange(ev) {\n      return setSize(+ev.target.value);\n    }\n  }), __jsx(InputRightAddon, {\n    children: \"px\"\n  })), __jsx(Tooltip, {\n    hasArrow: true,\n    label: \"Format Image\",\n    placement: \"top\",\n    \"aria-label\": \"format-image\"\n  }, __jsx(IconButton, {\n    \"aria-label\": \"edit image\",\n    icon: \"edit\",\n    color: \"blue.400\",\n    mb: \"4\",\n    onClick: formatImage\n  }))), __jsx(Tooltip, {\n    hasArrow: true,\n    label: \"Remove file\",\n    placement: \"bottom\",\n    \"aria-label\": \"delete-tooltip\"\n  }, __jsx(IconButton, {\n    \"aria-label\": \"delete\",\n    icon: \"delete\",\n    color: \"red.400\",\n    onClick: onDelete\n  }))))));\n};\n\nexport default FileCard;","map":null,"metadata":{},"sourceType":"module"}