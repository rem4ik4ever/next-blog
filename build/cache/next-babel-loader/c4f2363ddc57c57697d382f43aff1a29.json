{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport { useFormik } from \"formik\";\nimport { postData } from \"src/utils/fetch\";\nimport BlogForm from \"src/cms/blogs/BlogForm\";\nimport { BlogStatus } from \"src/enums/BlogStatus\";\nimport Router from \"next/router\";\n\nvar BlogWrite = function BlogWrite() {\n  var formik = useFormik({\n    initialValues: {\n      title: \"\",\n      tldr: \"\",\n      tags: [],\n      content: \"\",\n      thumbnail: null,\n      status: BlogStatus.draft\n    },\n    onSubmit: function onSubmit(values, _ref) {\n      var setStatus, setSubmitting, setErrors, result;\n      return _regeneratorRuntime.async(function onSubmit$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              setStatus = _ref.setStatus, setSubmitting = _ref.setSubmitting, setErrors = _ref.setErrors;\n              setSubmitting(true);\n              _context.prev = 2;\n              _context.next = 5;\n              return _regeneratorRuntime.awrap(postData(\"/api/cms/blogs\", values));\n\n            case 5:\n              result = _context.sent;\n              setStatus({\n                success: true\n              });\n              Router.push(\"/cms/write/\".concat(result.id));\n              _context.next = 14;\n              break;\n\n            case 10:\n              _context.prev = 10;\n              _context.t0 = _context[\"catch\"](2);\n              setStatus({\n                error: true\n              });\n              setSubmitting(false);\n\n            case 14:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, [[2, 10]], Promise);\n    }\n  });\n  return __jsx(BlogForm, {\n    formik: formik\n  });\n};\n\nexport default BlogWrite;","map":null,"metadata":{},"sourceType":"module"}