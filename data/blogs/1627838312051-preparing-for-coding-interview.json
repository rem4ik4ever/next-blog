{
  "title": "Preparing for Coding Interview",
  "tldr": "Here are my tips on preparing for Coding Interview",
  "tags": [
    "programming",
    "coding",
    "challenge",
    "problem",
    "hiring",
    "developer"
  ],
  "content": "In my previous blog I've described few tips of preparing for an interview and how interview process looks like. \n[Tips on preparing for an interview](/blog/tips-on-preparing-for-an-interview-as-a-software-engineer) Today I want to share some preparation material with you.\n\n## What is Technical Interview?\n\nIn order to prove that you qualify for a Software Engineering position that you are applying to, you need to pass all technical interviews. Usually it is a 3 separate interviews depending on company but not less than 2. \n\n- Initial filtering (Algorithm problem, Homework challenge) \n- Second round (Algorithm / System design problem)\n- Final Round (System design / Domain specific interview)\n\n### Algorithm problems \n\nIf you are not prepared and/or didn't brush up your knowledge about data structures you will fail. \n\n__How to prepare for it?__\n\n__[LeetCode](www.leetcode.com)__ is a good source of coding problems to solve. If you are serious about preparation and getting hired by FAANG companies I'd suggest purchasing a subscription that will unlock additional questions and faster compile time. \n\n__[Grokking Algorithms](https://amzn.to/3frGoCD)__ if you are new to algorithms and want to read about it first, this book is a great starting point. Very descriptive illustrations will help you to visually understand how those algorithms work.\n\n__Practice a lot.__ You never know what problem you will get, so the more you practice the higher chance you will solve it.\n\n__LeetCode problems__\n\nI've found this list on [Blind](https://www.teamblind.com/) and so far this covered most of the problem topics.\n\nArray\n\n- [Two Sum](https://leetcode.com/problems/two-sum/ )\n- [Best Time to Buy and Sell Stock](https://leetcode.com/problems/best-time-to-buy-and-sell-stock)\n- [Contains Duplicate](https://leetcode.com/problems/contains-duplicate/)\n- [Product of Array Except Self](https://leetcode.com/problems/product-of-array-except-self/)\n- [Maximum Subarray](https://leetcode.com/problems/maximum-subarray/)\n- [Maximum Product Subarray](https://leetcode.com/problems/maximum-product-subarray/)\n- [Find Minimum in Rotated Sorted Array](https://leetcode.com/problems/find-minimum-in-rotated-sorted-array/)\n- [Search in Rotated Sorted Array](https://leetcode.com/problems/search-in-rotated-sorted-array/)\n- [3Sum](https://leetcode.com/problems/3sum/)\n- [Container With Most Water](https://leetcode.com/problems/container-with-most-water/) \n---\n\nBinary\n\n- [Sum of Two Integers](https://leetcode.com/problems/sum-of-two-integers/)\n- [Number of 1 Bits](https://leetcode.com/problems/number-of-1-bits/)\n- [Counting Bits](https://leetcode.com/problems/counting-bits/)\n- [Missing Number](https://leetcode.com/problems/missing-number/)\n- [Reverse Bits](https://leetcode.com/problems/reverse-bits/)\n\n---\n\nDynamic Programming\n\n- [Climbing Stairs](https://leetcode.com/problems/climbing-stairs/)\n- [Coin Change](https://leetcode.com/problems/coin-change/)\n- [Longest Increasing Subsequence](https://leetcode.com/problems/longest-increasing-subsequence/)\n- [Longest Common Subsequence]()\n- [Word Break Problem](https://leetcode.com/problems/word-break/)\n- [Combination Sum](https://leetcode.com/problems/combination-sum-iv/)\n- [House Robber](https://leetcode.com/problems/house-robber/)\n- [House Robber II](https://leetcode.com/problems/house-robber-ii/)\n- [Decode Ways](https://leetcode.com/problems/decode-ways/)\n- [Unique Paths](https://leetcode.com/problems/unique-paths/)\n- [Jump Game](https://leetcode.com/problems/jump-game/)\n\n---\n\nGraph\n\n- [Clone Graph](https://leetcode.com/problems/clone-graph/)\n- [Course Schedule](https://leetcode.com/problems/course-schedule/)\n- [Pacific Atlantic Water Flow](https://leetcode.com/problems/pacific-atlantic-water-flow/)\n- [Number of Islands](https://leetcode.com/problems/number-of-islands/)\n- [Longest Consecutive Sequence](https://leetcode.com/problems/longest-consecutive-sequence/)\n- [Alien Dictionary (Leetcode Premium)](https://leetcode.com/problems/alien-dictionary/)\n- [Graph Valid Tree (Leetcode Premium)](https://leetcode.com/problems/graph-valid-tree/)\n- [Number of Connected Components in an Undirected Graph (Leetcode Premium)](https://leetcode.com/problems/number-of-connected-components-in-an-undirected-graph/)\n\n---\n\nInterval\n\n- [Insert Interval](https://leetcode.com/problems/insert-interval/)\n- [Merge Intervals](https://leetcode.com/problems/merge-intervals/)\n- [Non-overlapping Intervals](https://leetcode.com/problems/non-overlapping-intervals/)\n- [Meeting Rooms (Leetcode Premium)](https://leetcode.com/problems/meeting-rooms/)\n- [Meeting Rooms II (Leetcode Premium)](https://leetcode.com/problems/meeting-rooms-ii/)\n\n---\n\nLinked List\n\n- [Reverse a Linked List](https://leetcode.com/problems/reverse-linked-list/)\n- [Detect Cycle in a Linked List](https://leetcode.com/problems/linked-list-cycle/)\n- [Merge Two Sorted Lists](https://leetcode.com/problems/merge-two-sorted-lists/)\n- [Merge K Sorted Lists](https://leetcode.com/problems/merge-k-sorted-lists/)\n- [Remove Nth Node From End Of List](https://leetcode.com/problems/remove-nth-node-from-end-of-list/)\n- [Reorder List](https://leetcode.com/problems/reorder-list/)\n\n---\n\nMatrix\n\n- [Set Matrix Zeroes](https://leetcode.com/problems/set-matrix-zeroes/)\n- [Spiral Matrix](https://leetcode.com/problems/spiral-matrix/)\n- [Rotate Image](https://leetcode.com/problems/rotate-image/)\n- [Word Search](https://leetcode.com/problems/word-search/)\n\n---\n\nString\n\n- [Longest Substring Without Repeating Characters](https://leetcode.com/problems/longest-substring-without-repeating-characters/)\n- [Longest Repeating Character Replacement](https://leetcode.com/problems/longest-repeating-character-replacement/)\n- [Minimum Window Substring](https://leetcode.com/problems/minimum-window-substring/)\n- [Valid Anagram](https://leetcode.com/problems/valid-anagram/)\n- [Group Anagrams](https://leetcode.com/problems/group-anagrams/)\n- [Valid Parentheses](https://leetcode.com/problems/valid-parentheses/)\n- [Valid Palindrome](https://leetcode.com/problems/valid-palindrome/)\n- [Longest Palindromic Substring](https://leetcode.com/problems/longest-palindromic-substring/)\n- [Palindromic Substrings](https://leetcode.com/problems/palindromic-substrings/)\n- [Encode and Decode Strings (Leetcode Premium)](https://leetcode.com/problems/encode-and-decode-strings/)\n\n---\nTree\n\n- [Maximum Depth of Binary Tree](https://leetcode.com/problems/maximum-depth-of-binary-tree/)\n- [Same Tree](https://leetcode.com/problems/same-tree/)\n- [Invert/Flip Binary Tree](https://leetcode.com/problems/invert-binary-tree/)\n- [Binary Tree Maximum Path Sum](https://leetcode.com/problems/binary-tree-maximum-path-sum/)\n- [Binary Tree Level Order Traversal](https://leetcode.com/problems/binary-tree-level-order-traversal/)\n- [Serialize and Deserialize Binary Tree](https://leetcode.com/problems/serialize-and-deserialize-binary-tree/)\n- [Subtree of Another Tree](https://leetcode.com/problems/subtree-of-another-tree/)\n- [Construct Binary Tree from Preorder and Inorder Traversal](https://leetcode.com/problems/construct-binary-tree-from-preorder-and-inorder-traversal/)\n- [Validate Binary Search Tree](https://leetcode.com/problems/validate-binary-search-tree/)\n- [Kth Smallest Element in a BST](https://leetcode.com/problems/kth-smallest-element-in-a-bst/)\n- [Lowest Common Ancestor of BST](https://leetcode.com/problems/lowest-common-ancestor-of-a-binary-search-tree/)\n- [Implement Trie (Prefix Tree)](https://leetcode.com/problems/implement-trie-prefix-tree/)\n- [Add and Search Word](https://leetcode.com/problems/add-and-search-word-data-structure-design/)\n- [Word Search II](https://leetcode.com/problems/word-search-ii/)\n\n---\n\nHeap\n\n- [Merge K Sorted Lists](https://leetcode.com/problems/merge-k-sorted-lists/)\n- [Top K Frequent Elements](https://leetcode.com/problems/top-k-frequent-elements/)\n- [Find Median from Data Stream](https://leetcode.com/problems/find-median-from-data-stream/)\n\n \n### System design \n\nThis interview type will test your knowledge of building complex applications. Scalability, resilience, caching strategy and much more is going to be part of this interview. You will need to explain your solution and also explain why you made certain decisions. \n\n__How to prepare for it?__\n\n__[Designing Data-Intensive Applications](https://amzn.to/3jmjmxY)__ - this book has it all. Distributed systems, databases, how tos, whys, limitations and much more. It is a pretty big book, but I suggest you read it. \n\n__Build your own projects__ - try building you own side projects. Most of the AWS resources can be easily enabled as a free tier so you can have your own playground and build what ever you want. \n \n## Conclusion\n\nPreparation is they key for success. Read books, work on real life projects and solve LeetCode problems to improve your programming, analytical and critical thinking. Good luck!",
  "thumbnail": null,
  "status": "released",
  "author": "Rem Kim",
  "createdAt": "2021-08-01T17:18:32.051Z",
  "updatedAt": "2021-08-18T22:06:00.508Z",
  "slug": "preparing-for-coding-interview",
  "id": 1627838312051,
  "releasedAt": "2021-08-18T22:06:00.488Z",
  "thumbnailUrl": "https://rem-blog-bucket.s3.us-east-2.amazonaws.com/assets/09e97b32-47a6-4f0f-b181-99ee841ae524-600.png"
}