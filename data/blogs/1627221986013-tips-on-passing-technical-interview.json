{
  "title": "Tips on passing technical interview",
  "tldr": "Getting hired as a Software Engineer can be tough. Let me give you some important tips that helped me!",
  "tags": [
    "interview",
    "challenge",
    "software",
    "fang",
    "coding",
    "code"
  ],
  "content": "Let's say you are new grad and would like to apply for a startup, but you have no idea on what to expect from interview process. In this blog I will tell you my tips on how to pass technical interview and how to approach each step of the interview process!  I will not cover types of coding  questions and how to prepare for them. But will gladly describe those in my next blog. \n\nLet me just quickly outline somewhat basic steps of hiring process for a tech company.  \n__\n\n1. Recruiter phone screening\n2. Project Manager phone screening\n3. First technical challenge\n4. (Virtual) Onsite interview - Final step\n\n__\n\nThose are the most common steps for an hiring funnel. Some companies might swap step 2 and 3 and/or have additional technical screening,  because they are trying to fill Full Stack Engineer position and require additional Frontend or Backend challenge. \n\n### Recruiter phone screening\n\nQuick chat with company recruiter to identify if you are a good match, in terms of experience level and technical stack.\n\n### Project manager phone screening\n\nSame as recruiter phone screening, but this time will be more focused on your previous work experience.\n\n### First technical challenge\n\nThis is also called initial filtering. Usually conducted by one of the engineers you will be given a coding challenge to complete. \n\n### Onsite interview \n\nUsually consists of 4-5 interviews and takes 3-4 hours to complete. You will probably need to allocate full day for it in case if you work ask for a day off. \n\n- 1-2 Technical challenges\n- Leadership\n- Growth\n- CTO or VP of engineering \n\n\n## Tips for each steps \n\n### Recruiter and Manager phone screening\n\n- __[Stay positive and energetic](#positive-and-energetic)__ - show your interest in the company. \n- __[Do your homework](#do-your-homework)__ - research about the company that will help you to form a good picture about what company does. Also go to [Glassdoor](www.glassdoor.com) and look at company reviews, that can tell you a lot. For example you can find out about company work/life balance or if product is not aligned with engineering and much more. \n-  __[Prepare about me story](#prepare-about-me)__ - both recruiter and manager will ask you to tell about yourself and your past experience. This is easy to prepare. Write something up, no longer than 2 minutes, make sure its eloquent and contains all the highlights you are proud of to make great initial impress. \n- __Prepare questions__ - at the end of each interview you will be asked if you have any questions. Now this could be moment where you can show that you __[Did your homework](#do-your-homework)__ and ask something about company or your concerns or questions about benefit package. Some recruiters and managers think that if you don't have any questions at the end it could mean that you are not really interested in the company,  however not everyone. \n\n### All technical interviews\n\n- __[Pick your language](#pick-your-language)__ - know your programming language of strength. This means language that you are most comfortable with. Your interviewer will probably say that you are allowed to use Google, but this take your precious time to solve the challenge. \n- __[Have backup language](#have-backup-language)__ - let's say challenge is to create OOP model of something and your language of choice was JavaScript. While this still can do the thing, but JavaScript is more of a functional programming language and if I was asked to do something like that I would prefer to switch to Ruby. \n- __[Explain your solution](#explain-your-solution)__ - while solving the challenge is the main criteria, explaining your solution and your decision making is second most important thing to do. __Show your ability to clearly communicate your idea__\n- __[Write tests](#write-tests)__ - some challenges will require you to write tests, but if not prove that your solution is correct by writing tests and cover as many edge cases as possible. That will also help you identify flaws of your solution. \n\n### Growth, Leadership, CTO or VP conversation \n\n- __[Prepare for questions](#prepare-for-questions)__ - Usually questions for Growth and Leadership are widely available online, so do your homework and find questions examples and prepare your answers. \n- __[Be honest](#be-honest)__ - Be authentic, tell truth. If you want to be an awesome programmer in next 5 years say it. If you want to be team lead or product manager say it. \n- __[Prepare for unexpected](#prepare-for-unexpected)__ - CTO or VP might ask you something that you wont expect. For some its a SQL question, for some its something that they found in your CV for example recent C++ experience and he or she might pull a specific question under their sleeve. So this one could be tricky! \n\n\n### Wrapping up\n\nPreparation is the key, and for Software Engineers there is a huge emphasis on technical knowledge and making sure you solve the problem the most optimal way, while this is true make sure you don't forget about proper communication skills and prepare answers and questions in advance! \n\nGood luck in your interviews! \n\n\n",
  "thumbnail": null,
  "status": "released",
  "author": "Rem Kim",
  "createdAt": "2021-07-25T14:06:26.013Z",
  "updatedAt": "2021-07-25T20:28:08.753Z",
  "slug": "tips-on-passing-technical-interview",
  "id": 1627221986013,
  "thumbnailUrl": "https://rem-blog-bucket.s3.us-east-2.amazonaws.com/assets/bf67c8e8-5cbf-4d31-bbaf-90990e1e3c28-600.png",
  "releasedAt": null
}